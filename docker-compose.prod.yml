version: '3.8'
services:
  postgres:
    container_name: hotdeals_postgres
    expose:
      - 5432
    volumes:
      - postgres-hotdeals:/var/lib/postgresql/data/
    restart: unless-stopped
    networks:
      - hotdeals-network
    deploy:
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.labels.main-node == true

  redis:
    container_name: hotdeals-redis
    expose:
      - 6379
    networks:
      - hotdeals-network
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.labels.main-node == true

  scraper:
    container_name: hotdeals_scraper
    image: gordonpn/hotdeals-scraper:stable
    networks:
      - hotdeals-network
    restart: unless-stopped
    deploy:
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  mailer:
    container_name: hotdeals_mailer
    restart: unless-stopped
    image: gordonpn/hotdeals-mailer:stable
    networks:
      - hotdeals-network
    deploy:
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  backend:
    container_name: hotdeals_backend
    image: gordonpn/hotdeals-backend:stable
    environment:
      - NODE_ENV=production
    networks:
      - hotdeals-network
    expose:
      - 8080
    healthcheck:
      test: curl --fail -s http://localhost:8080/api/v1/healthcheck/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 1m30s
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  frontend:
    container_name: hotdeals-frontend
    image: gordonpn/hotdeals-frontend:stable
    networks:
      - hotdeals-network
    expose:
      - 3000
    volumes:
      - caddy-hotdeals:/data
    healthcheck:
      test: curl --fail -s http://localhost:3000/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 1m30s
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  proxy:
    container_name: hotdeals-proxy
    image: gordonpn/hotdeals-proxy:stable
    networks:
      - traefik-public
      - hotdeals-network
    expose:
      - 80
    healthcheck:
      test: curl --fail -s http://localhost:3000/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 1m30s
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      labels:
        - "traefik.enable=true"
        - "traefik.constraint-label=traefik-public"
        - "traefik.http.services.speedtest.loadbalancer.server.port=80"
        - "traefik.docker.network=traefik-public"

volumes:
  caddy-hotdeals:
    name: caddy-hotdeals
  postgres-hotdeals:
    external:
      name: postgres-hotdeals

networks:
  hotdeals-network:
    driver: overlay
  traefik-public:
    external: true
    driver: overlay
