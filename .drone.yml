---
kind: pipeline
type: docker
name: notification

trigger:
  event: [ push, pull_request ]

steps:
  - name: slack before
    image: plugins/slack
    failure: ignore
    settings:
      channel: drone-ci
      template: >
        {{build.event}} on branch {{build.branch}} from repo {{repo.name}}

        build #{{build.number}} started

        {{build.link}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL

---
kind: pipeline
type: docker
name: build

trigger:
  event: [ push, pull_request ]
  branch:
    exclude:
      - master

steps:
  - name: build scraper amd64
    image: golang:1.14-alpine
    environment:
      GOOS: linux
      GOARCH: amd64
    commands:
      - cd ./scraper
      - go build
  - name: build mailer amd64
    image: golang:1.14-alpine
    environment:
      GOOS: linux
      GOARCH: amd64
    commands:
      - cd ./mailer
      - go build
  - name: build scraper arm64
    image: golang:1.14-alpine
    environment:
      GOOS: linux
      GOARCH: arm64
    commands:
      - cd ./scraper
      - go build
  - name: build mailer arm64
    image: golang:1.14-alpine
    environment:
      GOOS: linux
      GOARCH: arm64
    commands:
      - cd ./mailer
      - go build
---
kind: pipeline
type: docker
name: test

trigger:
  event: [ push, pull_request ]
  branch:
    exclude:
      - master

steps:
  - name: test scraper
    image: golang:1.14-buster
    commands:
      - cd ./scraper
      - go test -v
  - name: test mailer
    image: golang:1.14-buster
    commands:
      - cd ./mailer
      - go test -v
---
kind: pipeline
type: docker
name: build and publish docker image

platform:
  os: linux
  arch: amd64

depends_on:
  - build
  - test

trigger:
  event: [ push, pull_request ]
  branch:
    exclude:
      - master

steps:
  - name: publish
    image: gordonpn/docker-buildx-drone
    environment:
      DOCKER_TOKEN:
        from_secret: DOCKER_TOKEN
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - /drone/src/.docker/scripts/build.sh

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
type: docker
name: deploy

trigger:
  event: [ push ]
  branch: [ master ]

steps:
  - name: deploy prod
    image: docker/compose:1.25.5
    environment:
      TZ: America/Montreal
      MAILER_HC_UUID:
        from_secret: MAILER_HC_UUID
      POSTGRES_DB:
        from_secret: POSTGRES_DB
      POSTGRES_NONROOT_DB:
        from_secret: POSTGRES_NONROOT_DB
      POSTGRES_NONROOT_PASSWORD:
        from_secret: POSTGRES_NONROOT_PASSWORD
      POSTGRES_NONROOT_USER:
        from_secret: POSTGRES_NONROOT_USER
      POSTGRES_PASSWORD:
        from_secret: POSTGRES_PASSWORD
      POSTGRES_USER:
        from_secret: POSTGRES_USER
      SCRAPER_HC_UUID:
        from_secret: SCRAPER_HC_UUID
      SENDGRID_API_KEY:
        from_secret: SENDGRID_API_KEY
      SENDGRID_TEMPLATE:
        from_secret: SENDGRID_TEMPLATE
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - /drone/src/.docker/scripts/deploy_prod.sh

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: notification after

trigger:
  event: [ push, pull_request ]

steps:
  - name: slack after
    image: plugins/slack
    failure: ignore
    settings:
      channel: drone-ci
      template: >
        {{repo.name}}:
        {{#success build.status}}
        build #{{build.number}} succeeded
        {{else}}
        build #{{build.number}} failed
        {{/success}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
    when:
      status: [ success, failure ]

depends_on:
  - build
  - test
  - build and publish docker image
  - deploy
