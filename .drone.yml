---
kind: pipeline
type: docker
name: notification

trigger:
  event: [ push, pull_request ]

steps:
  - name: slack before
    image: plugins/slack
    failure: ignore
    settings:
      channel: drone-ci
      template: >
        {{build.event}} on branch {{build.branch}} from repo {{repo.name}}

        build #{{build.number}} started!

        {{build.link}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL

---
kind: pipeline
type: docker
name: build

trigger:
  event: [ push, pull_request ]
  branch:
    exclude:
      - master

steps:
  - name: build scraper
    image: golang:1.14-alpine
    commands:
      - cd ./scraper
      - go build
  - name: build mailer
    image: golang:1.14-alpine
    commands:
      - cd ./mailer
      - go build
  - name: slack after build
    image: plugins/slack
    failure: ignore
    settings:
      channel: drone-ci
      template: >
        {{repo.name}}:
        {{#success build.status}}
        build #{{build.number}} succeeded!
        {{else}}
        build #{{build.number}} failed!
        {{/success}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
    when:
      status: [ success, failure ]

---
kind: pipeline
type: docker
name: test

trigger:
  event: [ push, pull_request ]
  branch:
    exclude:
      - master

steps:
  - name: test scraper
    image: golang:1.14-buster
    commands:
      - cd ./scraper
      - go test -v
  - name: test mailer
    image: golang:1.14-buster
    commands:
      - cd ./mailer
      - go test -v
  - name: slack after test
    image: plugins/slack
    failure: ignore
    settings:
      channel: drone-ci
      template: >
        {{repo.name}}:
        {{#success build.status}}
        test #{{build.number}} succeeded!
        {{else}}
        test #{{build.number}} failed!
        {{/success}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
    when:
      status: [ success, failure ]

---
kind: pipeline
type: docker
name: build docker images

trigger:
  event: [ push, pull_request ]
  branch:
    exclude:
      - master

steps:
  - name: build images
    image: docker/compose:1.25.5
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker-compose -f /drone/src/docker-compose.yml -f /drone/src/docker-compose.prod.yml build
  - name: slack after docker image build
    image: plugins/slack
    settings:
      channel: drone-ci
      template: >
        {{repo.name}}:
        {{#success build.status}}
        docker image build #{{build.number}} succeeded!
        {{else}}
        docker image build #{{build.number}} failed!
        {{/success}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
    when:
      status: [ success, failure ]

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: deploy

trigger:
  event: [ push ]
  branch: [ master ]

steps:
  - name: deploy prod
    image: docker/compose:1.25.5
    environment:
      COMPOSE_PROJECT_NAME: hotdeals
      TZ: America/Montreal
      MAILER_HC_UUID:
        from_secret: MAILER_HC_UUID
      POSTGRES_DB:
        from_secret: POSTGRES_DB
      POSTGRES_NONROOT_DB:
        from_secret: POSTGRES_NONROOT_DB
      POSTGRES_NONROOT_PASSWORD:
        from_secret: POSTGRES_NONROOT_PASSWORD
      POSTGRES_NONROOT_USER:
        from_secret: POSTGRES_NONROOT_USER
      POSTGRES_PASSWORD:
        from_secret: POSTGRES_PASSWORD
      POSTGRES_USER:
        from_secret: POSTGRES_USER
      SCRAPER_HC_UUID:
        from_secret: SCRAPER_HC_UUID
      SENDGRID_API_KEY:
        from_secret: SENDGRID_API_KEY
      SENDGRID_TEMPLATE:
        from_secret: SENDGRID_TEMPLATE
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - /bin/sh /drone/src/.docker/scripts/deploy_prod.sh

  - name: slack after deploy
    image: plugins/slack
    failure: ignore
    settings:
      channel: drone-ci
      template: >
        {{repo.name}}:
        {{#success build.status}}
        deploy #{{build.number}} succeeded!
        {{else}}
        deploy #{{build.number}} failed!
        {{/success}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
    when:
      status: [ success, failure ]

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
