version: "3.8"
services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_DB
      - POSTGRES_NONROOT_DB
      - POSTGRES_NONROOT_PASSWORD
      - POSTGRES_NONROOT_USER
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - TZ=America/Montreal
    volumes:
      - ./.docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  redis:
    image: redis:latest
    restart: unless-stopped

  scraper:
    build:
      context: ./scraper
      dockerfile: Dockerfile
    environment:
      - POSTGRES_NONROOT_DB
      - POSTGRES_NONROOT_PASSWORD
      - POSTGRES_NONROOT_USER
      - SCRAPER_HC_UUID
      - TZ=America/Montreal
    depends_on:
      - postgres

  mailer:
    build:
      context: ./mailer
      dockerfile: Dockerfile
    environment:
      - MAILER_HC_UUID
      - POSTGRES_NONROOT_DB
      - POSTGRES_NONROOT_PASSWORD
      - POSTGRES_NONROOT_USER
      - SENDGRID_API_KEY
      - SENDGRID_TEMPLATE
      - TZ=America/Montreal
    depends_on:
      - postgres

  notifier:
    build:
      context: ./notifier
      dockerfile: Dockerfile
    environment:
      - NOTIFIER_HC_UUID
      - POSTGRES_NONROOT_USER
      - POSTGRES_NONROOT_PASSWORD
      - POSTGRES_NONROOT_DB
      - SLACK_NOTIFIER_HOOK
      - TZ=America/Montreal
    depends_on:
      - postgres

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - TZ=America/Montreal
      - POSTGRES_NONROOT_USER
      - POSTGRES_NONROOT_PASSWORD
      - POSTGRES_NONROOT_DB
      - SENDGRID_API_KEY
      - SENDGRID_TEMPLATE_CONFIRM
    restart: unless-stopped
    depends_on:
      - postgres
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - TZ=America/Montreal
    restart: unless-stopped
    depends_on:
      - backend
      - postgres

  proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    environment:
      - TZ=America/Montreal
    restart: unless-stopped
    depends_on:
      - backend
      - frontend
